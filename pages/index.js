import Head from 'next/head'
import { Inter } from 'next/font/google'
import FetcherUsers from '@/components/utils/fetcherUsers';
import { useInfiniteQuery, useQuery } from '@tanstack/react-query';
import CardUser from '@/components/ui/cardUser';
import Navbar from '@/components/ui/navbar';
import { useEffect, useState } from 'react';
const inter = Inter({ subsets: ['latin'] })

 
export default function Home() {
  const { isLoading, error, data} = useQuery(['users'], FetcherUsers);
  const [dataPerPage, setDataPerPage] = useState([])
  const [currentPage, setCurrentPage] = useState(1)
  const [from, setFrom] = useState(0)
  const [to, setTo] = useState(4)

  if (error) return <div>Error: {error.message}</div>

  const sliceData = () => {
    if (data) {
      setDataPerPage(data.slice(from, to))
      console.log('sliced data')
    }
  }

  useEffect(() => {
    sliceData()
    console.log('update')
  },[data, from, to])
  console.log(from , to)
  // console.log(data.length)
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Navbar/>
        <div className=' sm:h-screen flex flex-col justify-center items-center' > 
          <ul className=' w-fit max-sm:mt-20 max-sm:mb-10 grid sm:grid-cols-2 grid-cols-1 gap-10'>
            {isLoading ? "Loading..." : ""}
            {dataPerPage ? dataPerPage.map(user => {
              return (
                <li className=' relative' key={user.id}>
                    <CardUser data={user} />
              </li>
            )}
            ) : ""}
          </ul>
          <div className=' [&>*]:px-3 sm:mt-10 max-sm:mb-20 flex justify-center border divide-x'>
              <button className=' ' onClick={async () => {
                const w = await data.length
                if (from > 0) {
                  setFrom(from - 4)
                  setTo(to - 4)
                  setCurrentPage(currentPage - 1)
                }
                }}>
                  Prev
              </button>

              <span className=''>{currentPage}</span>

              <button className=' ' onClick={async () => {
                const w = await data.length
                console.log(typeof w)
                if (to < w) {
                  setFrom(from + 4)
                  setTo(to + 4)
                  setCurrentPage(currentPage + 1)
                }
              }}>
                  Next
              </button>
            </div>
         
            
        </div>
      </main>

    </>
  )
}
